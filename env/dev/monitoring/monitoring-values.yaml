# Lightweight monitoring configuration for resource-constrained cluster
# Optimized for clusters with limited RAM (~4GB total)

ingress:
  enabled: true
  grafana:
    path: /grafana
  prometheus:
    path: /prometheus  
  alertmanager:
    path: /alertmanager

kube-prometheus-stack:
  # Grafana - lightweight configuration
  grafana:
    adminPassword: "monitoring-admin123"
    
    # Minimal resource allocation
    resources:
      limits:
        cpu: 200m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 128Mi
    
    # Minimal persistence
    persistence:
      enabled: true
      size: 1Gi
    
    # Disable plugins to save memory
    plugins: []
    
    # Minimal configuration
    grafana.ini:
      server:
        root_url: http://192.168.1.100/grafana
      analytics:
        check_for_updates: false
        reporting_enabled: false
      log:
        level: warn  # Reduce logging
      snapshots:
        external_enabled: false

  # Prometheus - lightweight configuration  
  prometheus:
    enabled: true
    
    prometheusSpec:
      # Minimal resource allocation
      resources:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 200m
          memory: 512Mi
      
      # Reduced retention to save storage and memory
      retention: 3d  # Instead of 15d
      retentionSize: 2GB  # Instead of 30GB
      
      # Minimal storage
      storageSpec:
        volumeClaimTemplate:
          spec:
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 5Gi  # Instead of 15Gi
      
      # Reduce scrape frequency to save CPU/memory
      scrapeInterval: 60s  # Instead of 30s
      evaluationInterval: 60s
      
      # Disable some heavy features
      enableAdminAPI: false
      portName: web
      
      # Monitor only essential namespaces
      serviceMonitorSelectorNilUsesHelmValues: false
      podMonitorSelectorNilUsesHelmValues: false
      ruleSelectorNilUsesHelmValues: false
      
      # Lightweight scrape config - only essential metrics
      additionalScrapeConfigs:
        # Only dev namespace for now (expand later if needed)
        - job_name: 'microservices-dev-lightweight'
          scrape_interval: 60s  # Less frequent scraping
          kubernetes_sd_configs:
            - role: pod
              namespaces:
                names: ['dev']  # Only dev namespace
          relabel_configs:
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
              action: keep
              regex: true
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
              action: replace
              target_label: __metrics_path__
              regex: (.+)
            - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
              action: replace
              regex: ([^:]+)(?::\d+)?;(\d+)
              replacement: $1:$2
              target_label: __address__
            - source_labels: [__meta_kubernetes_namespace]
              target_label: environment
              replacement: dev

  # AlertManager - minimal configuration
  alertmanager:
    enabled: true
    
    alertmanagerSpec:
      # Minimal resources
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 50m
          memory: 64Mi
          
      # Minimal storage
      storage:
        volumeClaimTemplate:
          spec:
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 500Mi  # Very small
      
      # Minimal retention
      retention: 24h  # Instead of default 120h

  # Node Exporter - lightweight
  nodeExporter:
    enabled: true
    resources:
      limits:
        cpu: 100m
        memory: 64Mi
      requests:
        cpu: 50m
        memory: 32Mi

  # kube-state-metrics - lightweight
  kubeStateMetrics:
    enabled: true
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 50m
        memory: 64Mi

  # Disable heavy components to save resources
  prometheusOperator:
    resources:
      limits:
        cpu: 200m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 128Mi

  # Reduce default rules to essential only
  defaultRules:
    create: true
    rules:
      alertmanager: false  # Disable to save memory
      etcd: false  # Not needed for our setup
      general: true  # Keep basic rules
      k8s: true  # Keep k8s rules
      kubePrometheusNodeRecording: true  # Keep node rules
      kubernetesApps: true  # Keep app rules
      kubernetesResources: true  # Keep resource rules
      kubernetesStorage: false  # Disable if not using persistent volumes extensively
      kubernetesSystem: true  # Keep system rules
      node: true  # Keep node rules
      prometheus: false  # Disable prometheus self-monitoring rules

# Global resource configuration
global:
  # Image pull policy to save bandwidth
  imagePullPolicy: IfNotPresent

# ServiceMonitor configuration - minimal
serviceMonitor:
  enabled: false  # Disable for now to save resources
